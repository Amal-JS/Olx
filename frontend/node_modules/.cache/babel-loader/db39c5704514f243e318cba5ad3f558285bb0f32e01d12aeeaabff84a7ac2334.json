{"ast":null,"code":"var _jsxFileName = \"D:\\\\DSF\\\\Olx\\\\frontend\\\\src\\\\components\\\\CustomContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, createContext, useState, useEffect } from 'react';\n\n//global context object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/createContext();\n\n//component which holds the global state\nexport const CustomContext = ({\n  children\n}) => {\n  _s();\n  console.log('Custom context');\n  const [globalObject, setGlobalObject] = useState(\n  //global state contains the an object that holds a key which is userlogged \n  {\n    userLoggedIn: false,\n    user: {\n      username: ''\n    }\n  });\n  const updateGlobalObject = newState => {\n    setGlobalObject(newState);\n  };\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n  });\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      globalObject,\n      updateGlobalObject\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n//get the global context object\n_s(CustomContext, \"zCsd/CcxQ4/fv+4qm7e4wYKeAvo=\");\n_c = CustomContext;\nexport const GetContext = () => {\n  _s2();\n  return useContext(MyContext);\n};\n_s2(GetContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = GetContext;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomContext\");\n$RefreshReg$(_c2, \"GetContext\");","map":{"version":3,"names":["useContext","createContext","useState","useEffect","jsxDEV","_jsxDEV","MyContext","CustomContext","children","_s","console","log","globalObject","setGlobalObject","userLoggedIn","user","username","updateGlobalObject","newState","localStorage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","GetContext","_s2","_c2","$RefreshReg$"],"sources":["D:/DSF/Olx/frontend/src/components/CustomContext.js"],"sourcesContent":["import {useContext , createContext ,useState ,useEffect} from 'react'\r\n\r\n\r\n//global context object\r\nconst MyContext = createContext()\r\n\r\n//component which holds the global state\r\nexport const  CustomContext = ({children}) => {\r\n    console.log('Custom context')\r\n    const [globalObject , setGlobalObject] = useState(\r\n\r\n        //global state contains the an object that holds a key which is userlogged \r\n        {\r\n            userLoggedIn : false,\r\n            user : {username:''},\r\n         \r\n    })\r\n\r\n\r\n    const updateGlobalObject  = (newState)=>{\r\n        setGlobalObject(newState)\r\n\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        const user = localStorage.getItem('user')\r\n       \r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <MyContext.Provider value={{globalObject,updateGlobalObject}} >\r\n            {children}\r\n        </MyContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n//get the global context object\r\nexport  const GetContext =()=>{\r\n\r\n    return useContext(MyContext)\r\n}"],"mappings":";;;AAAA,SAAQA,UAAU,EAAGC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;;AAGrE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,gBAAGL,aAAa,CAAC,CAAC;;AAEjC;AACA,OAAO,MAAOM,aAAa,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1CC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7B,MAAM,CAACC,YAAY,EAAGC,eAAe,CAAC,GAAGX,QAAQ;EAE7C;EACA;IACIY,YAAY,EAAG,KAAK;IACpBC,IAAI,EAAG;MAACC,QAAQ,EAAC;IAAE;EAE3B,CAAC,CAAC;EAGF,MAAMC,kBAAkB,GAAKC,QAAQ,IAAG;IACpCL,eAAe,CAACK,QAAQ,CAAC;EAE7B,CAAC;EAGDf,SAAS,CAAC,MAAI;IACV,MAAMY,IAAI,GAAGI,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAE7C,CAAC,CAAC;EAIF,oBACIf,OAAA,CAACC,SAAS,CAACe,QAAQ;IAACC,KAAK,EAAE;MAACV,YAAY;MAACK;IAAkB,CAAE;IAAAT,QAAA,EACxDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE7B,CAAC;;AAGD;AAAAjB,EAAA,CAjCcF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAkC3B,OAAQ,MAAMqB,UAAU,GAAEA,CAAA,KAAI;EAAAC,GAAA;EAE1B,OAAO7B,UAAU,CAACM,SAAS,CAAC;AAChC,CAAC;AAAAuB,GAAA,CAHaD,UAAU;AAAAE,GAAA,GAAVF,UAAU;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}